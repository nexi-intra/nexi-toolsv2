/**
 * This function is generated by Koksmat Studio v0.1
 * Feel free to modify it as needed
 *
 */

import { z, ZodObject } from "zod";
import { execute } from "@/actions/client";

// The schema for the UpdateActivitymodel procedure
const _schema = z.object({
  title: z.any().optional(),
  description: z.string().optional(),
  tenant: z.string().optional(),
  searchindex: z
    .string()
    .describe(
      "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n"
    )
    .optional(),
  name: z.string().optional(),
  activity: z.string().optional(),
  data: z.record(z.any()).optional(),
});

//  TypeScript type based on the schema
export type UpdateActivitymodelProps = z.infer<typeof _schema>;

// Exclude 'tenant' and 'searchindex' from the type
export type InputType = Omit<
  UpdateActivitymodelProps,
  "tenant" | "searchindex"
>;

/**
// Example usage of the  function UpdateActivitymodel
try {
  const  result =  UpdateActivitymodel(
    authtoken, // ensure this is a valid token
    title, //replace title with your own variable
    description, //replace description with your own variable
    name, //replace name with your own variable
    activity, //replace activity with your own variable
    data, //replace data with your own variable);
  
  
} catch (error) {
  console.error( error.message);
}
  */

export default async function UpdateActivitymodel<T>(
  authtoken: string,
  data: T
) {
  const payload = JSON.parse(JSON.stringify(data).replaceAll("'", "''"));

  const result = await execute(
    authtoken, // <-- this is the authentication token containing the user's credentials - the upn will be used as "actor" name
    "works", // <-- this is a reference to a record in the connections table in the mix database
    "magic-mix.app", // <-- this is the service name processing the request
    "update_activitymodel", // <-- this is the name of the procedure in the database pointed to by the connection
    payload // <-- this is the data to be sent to the procedure
  );

  return result;
}
