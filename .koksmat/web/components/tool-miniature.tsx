/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/wXBbIwK33oD
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { FavouriteIcon } from "./favourite-icon";
import { ComponentDoc } from "./component-documentation-hub";

export interface ToolMiniatureProps {
  weburl: string;
  title: string;
  badge: string;
  isfavourite: boolean;
  tooglefavourite: () => void;
  onClick: () => void;
}

export const examples: ComponentDoc[] = [{
  id: 'toolMiniature',
  name: 'ToolMiniature',
  description: 'The ToolMedium component is a versatile tool display element that showcases detailed information about a tool, including its description, associated countries, business purposes, and related documents.',
  usage: `import ToolLarge, { ToolInfo } from "@/components/tool-large"

const toolInfo: ToolInfo = {
  id: 'nexi-intra-github',
  icon: 'https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png',
  name: 'Nexi Intra GitHub repo',
  description: {
    en: 'Welcome to the Nexi Digital Workspace! As we embark on a transformative journey to streamline business operations, our small but mighty team is poised to revolutionize how we approach productivity and workflow management. Our core team consists of two dedicated developers and one adept colleague focusing on monitoring. Together, we are committed to developing a comprehensive portfolio of business productivity applications.'
  },
  countries: ['Italy', 'Denmark', 'Norway'],
  businessPurposes: ['Code Repository', 'Collaboration'],
  documents: [
    { name: 'README', url: 'https://github.com/nexi-intra/README.md' },
    { name: 'Contributing Guidelines', url: 'https://github.com/nexi-intra/CONTRIBUTING.md' }
  ]

};

<ToolLarge
  tool={toolInfo}
  badge="Exampler"
  isFavourite={false}
  toggleFavourite={() => {
    // Handle favourite toggle
  }}
  onClick={() => {
    // Handle click action
  }}
/>`,
  example: (
    <ToolMiniature weburl={""} title={"Mini"} badge={"M"} isfavourite={false} tooglefavourite={function (): void {
      throw new Error("Function not implemented.");
    } } onClick={function (): void {
      throw new Error("Function not implemented.");
    } }     
    />
  ),
}
]
export function ToolMiniature(props: ToolMiniatureProps) {
  const { title, badge, isfavourite, tooglefavourite, onClick } = props;
  return (
    <Card
      className="w-[200px] h-[200px] m-2 p-4 relative rounded-lg hover:shadow-lg cursor-pointer hover:bg-gray-100"
      onClick={onClick}
    >
      <Badge variant="secondary" className="absolute top-2 left-2">
        {badge}
      </Badge>
      <UserIcon className="w-16 h-16 mx-auto mt-8 mb-4 text-blue-500" />
      <div className="text-center text-lg font-bold overflow-hidden max-h-14 min-h-14">
        {title}
      </div>
      <FavouriteIcon
        onClick={tooglefavourite}
        className="absolute top-2 right-2 w-6 h-6 text-blue-700 cursor-default"
        selected={isfavourite}
      />
    </Card>
  );
}

function UserIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  );
}
